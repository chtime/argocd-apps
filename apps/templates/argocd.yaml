apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd 
  namespace: argocd 
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    helm:
      parameters:
        - name:
          value:
    chart: argo-cd
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: HEAD
  destination:
    server: {{ .Values.spec.destination.server }} 
    namespace: argocd 

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: argocd-server-ingress-route
  namespace: argocd
spec:
  entryPoints:
    - websecure
    - web
  routes:
    - kind: Rule
      match: Host(`argocd.{{ .Values.spec.domain }}`)
      priority: 10
      services:
        - name: argocd-server
          port: 80
    - kind: Rule
      match: Host(`argocd.{{ .Values.spec.domain }}`) && Headers(`Content-Type`, `application/grpc`)
      priority: 11
      services:
        - name: argocd-server
          port: 80
          scheme: h2c
  tls:
    certResolver: default
    options: {}

---

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-cmd-params-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-cmd-params-cm
data:
  server.insecure: "true"

# to have this applied, restart the argocd-server deployment:
# kubectl scale -n argocd deployment/argocd-server --replicas=0
# kubectl scale -n argocd deployment/argocd-server --replicas=1
